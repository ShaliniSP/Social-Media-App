{"ast":null,"code":"import _classCallCheck from \"/Users/sanky/slacts/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sanky/slacts/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sanky/slacts/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sanky/slacts/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sanky/slacts/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sanky/slacts/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sanky/slacts/src/components/User-container/usercontainer.js\";\nimport React, { Component } from 'react';\nimport './usercontainer.css';\nimport ImageUploader from 'react-images-upload';\nimport postDataService from './../../dataservice/posts-service.js'; // import Post from './../post/post.js';\n\nimport { Form, Button, Card, Collapse } from 'react-bootstrap'; // import placeholderImg from './../../small_852.jpg';\n// function oldtoDataURL(url, callback) {\n//   var xhr = new XMLHttpRequest();\n//   xhr.onload = function() {\n//     var reader = new FileReader();\n//     reader.onloadend = function() {\n//       callback(reader.result);\n//     }\n//     reader.readAsDataURL(xhr.response);\n//   };\n//   xhr.open('GET', url);\n//   xhr.responseType = 'blob';\n//   xhr.send();\n// }\n\nvar UserContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserContainer, _Component);\n\n  function UserContainer(props, context) {\n    var _this;\n\n    _classCallCheck(this, UserContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserContainer).call(this, props, context));\n    _this.state = {\n      open: false,\n      uname: '',\n      posts: [],\n      pictures: [],\n      image: '',\n      capton: '',\n      category: ''\n    };\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeCaption = _this.onChangeCaption.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeCategory = _this.onChangeCategory.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toDataURL = _this.toDataURL.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserContainer, [{\n    key: \"onDrop\",\n    value: function onDrop(picture) {\n      var _this2 = this;\n\n      this.setState({\n        pictures: this.state.pictures.concat(picture)\n      });\n      this.toDataURL(picture[0], function (result) {\n        return _this2.setState({\n          image: result\n        });\n      });\n    }\n  }, {\n    key: \"toDataURL\",\n    value: function toDataURL(url, callback) {\n      var fileToLoad = url;\n      console.log(url);\n      var fileReader = new FileReader();\n\n      fileReader.onload = function (fileLoadedEvent) {\n        callback(fileLoadedEvent.target.result);\n      };\n\n      fileReader.readAsDataURL(fileToLoad);\n    }\n  }, {\n    key: \"onChangeCaption\",\n    value: function onChangeCaption(event) {\n      return this.setState({\n        caption: event.currentTarget.value\n      });\n    }\n  }, {\n    key: \"onChangeCategory\",\n    value: function onChangeCategory(event) {\n      return this.setState({\n        category: event.currentTarget.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      // const astate = this;\n      // this.toDataURL(this.state.pictures[0], function(dataUrl) {\n      //   console.log('RESULT:', dataUrl);\n      //   astate.setState({\n      //       image: dataUrl,\n      //   });\n      // })\n      var timestampnow = Date.now();\n      console.log(new Intl.DateTimeFormat('en-US', {\n        day: '2-digit',\n        month: '2-digit',\n        year: 'numeric',\n        second: '2-digit',\n        minute: '2-digit',\n        hour: '2-digit'\n      }).format(timestampnow));\n      postDataService.uploadPost({\n        //actid: ,\n        username: this.state.uname,\n        timestamp: '15-02-2019:56-45-07',\n        caption: this.state.caption,\n        categoryName: this.state.category,\n        imgB64: this.state.image,\n        actId: Math.floor(Math.random() * 1000 + 1)\n      }, function (resp) {\n        console.log(resp);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var open = this.state.open;\n      return React.createElement(\"div\", {\n        className: \"UserContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \" \"), React.createElement(React.Fragment, null, React.createElement(Button, {\n        className: \"first\",\n        variant: \"info\",\n        onClick: function onClick() {\n          return _this3.setState({\n            open: !open\n          });\n        },\n        \"aria-controls\": \"example-collapse-text\",\n        \"aria-expanded\": open,\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Create new Post\"), React.createElement(Collapse, {\n        in: this.state.open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, \"Click to expand \"), this.state.pictures.length !== 0 ? React.createElement(Card.Img, {\n        src: this.state.image,\n        className: \"uploaded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Choose Image\"), React.createElement(ImageUploader, {\n        className: \"upload-img\",\n        withIcon: true,\n        buttonText: \"Choose image\",\n        onChange: this.onDrop,\n        imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n        maxFileSize: 5242880,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      })), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      }, \"Caption\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.password,\n        onChange: this.onChangeCaption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Ex. I feel happy.\")), React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Enter Category\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.category,\n        onChange: this.onChangeCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Ex. Animals\")), React.createElement(Button, {\n        variant: \"info\",\n        block: true,\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Upload\")))))));\n    }\n  }]);\n\n  return UserContainer;\n}(Component);\n\nexport default UserContainer;","map":{"version":3,"sources":["/Users/sanky/slacts/src/components/User-container/usercontainer.js"],"names":["React","Component","ImageUploader","postDataService","Form","Button","Card","Collapse","UserContainer","props","context","state","open","uname","posts","pictures","image","capton","category","onDrop","bind","onChangeCaption","onChangeCategory","onSubmit","toDataURL","picture","setState","concat","result","url","callback","fileToLoad","console","log","fileReader","FileReader","onload","fileLoadedEvent","target","readAsDataURL","event","caption","currentTarget","value","timestampnow","Date","now","Intl","DateTimeFormat","day","month","year","second","minute","hour","format","uploadPost","username","timestamp","categoryName","imgB64","actId","Math","floor","random","resp","length","password"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './usercontainer.css';\nimport ImageUploader from 'react-images-upload';\nimport postDataService from './../../dataservice/posts-service.js';\n// import Post from './../post/post.js';\n\nimport {\n    Form,\n    Button,\n    Card,\n    Collapse,\n} from 'react-bootstrap';\n// import placeholderImg from './../../small_852.jpg';\n\n\n// function oldtoDataURL(url, callback) {\n//   var xhr = new XMLHttpRequest();\n//   xhr.onload = function() {\n//     var reader = new FileReader();\n//     reader.onloadend = function() {\n//       callback(reader.result);\n//     }\n//     reader.readAsDataURL(xhr.response);\n//   };\n//   xhr.open('GET', url);\n//   xhr.responseType = 'blob';\n//   xhr.send();\n// }\n\n\nclass UserContainer extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            open: false,\n            uname: '' ,\n            posts: [],\n            pictures: [],\n            image: '',\n            capton: '',\n            category: '',\n        };\n        this.onDrop = this.onDrop.bind(this);\n        this.onChangeCaption = this.onChangeCaption.bind(this);\n        this.onChangeCategory = this.onChangeCategory.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.toDataURL = this.toDataURL.bind(this);\n    }\n\n    onDrop(picture) {\n        this.setState({\n            pictures: this.state.pictures.concat(picture),\n        });\n\n        this.toDataURL(picture[0], result => {\n            return this.setState({\n              image: result,\n            });\n        });\n    }\n\n    toDataURL(url, callback) {\n            var fileToLoad = url;\n            console.log(url);\n            var fileReader = new FileReader();\n            fileReader.onload = function(fileLoadedEvent)\n            {\n                callback(fileLoadedEvent.target.result);\n            };\n            fileReader.readAsDataURL(fileToLoad);\n    }\n\n    onChangeCaption(event) {\n\n        return this.setState({\n            caption: event.currentTarget.value,\n        });\n    }\n\n    onChangeCategory(event) {\n\n\n        return this.setState({\n            category: event.currentTarget.value,\n        });\n    }\n\n    onSubmit() {\n      // const astate = this;\n      // this.toDataURL(this.state.pictures[0], function(dataUrl) {\n      //   console.log('RESULT:', dataUrl);\n      //   astate.setState({\n      //       image: dataUrl,\n      //   });\n      // })\n\n      const timestampnow = Date.now();\n      console.log(new Intl.DateTimeFormat('en-US', {day: '2-digit', month: '2-digit',year: 'numeric',second: '2-digit',minute: '2-digit', hour: '2-digit'}).format(timestampnow));\n      postDataService.uploadPost({\n        //actid: ,\n        username: this.state.uname,\n        timestamp: '15-02-2019:56-45-07',\n        caption: this.state.caption,\n        categoryName: this.state.category,\n        imgB64: this.state.image,\n        actId: Math.floor(Math.random()*1000 + 1),\n        },(resp) => {\n          console.log(resp);\n        })\n\n    }\n\n    render() {\n        const { open } = this.state;\n        return (\n\n\n          <div className=\"UserContainer\">\n          <p> </p>\n          <>\n\n\n            <Button\n              className=\"first\"\n              variant=\"info\"\n              onClick={() => this.setState({ open: !open })}\n              aria-controls=\"example-collapse-text\"\n              aria-expanded={open}\n              block\n            >\n              Create new Post\n            </Button>\n\n            <Collapse in={this.state.open}>\n            <Card>\n                <p className=\"text-muted\">Click to expand </p>\n\n                { this.state.pictures.length !==0 ?\n                  <Card.Img src={this.state.image} className=\"uploaded\"></Card.Img>\n                  :\n                  <div>\n                  <Form.Label>\n                    Choose Image\n                  </Form.Label>\n                  <ImageUploader\n                      className=\"upload-img\"\n                      withIcon={true}\n                      buttonText='Choose image'\n                      onChange={this.onDrop}\n                      imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                      maxFileSize={5242880}\n                  />\n                  </div>\n\n              }\n\n                <Card.Body>\n                <Form className='form'>\n                    <Form.Group controlId=\"formBasicEmail\">\n\n\n\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Caption</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.password} onChange={this.onChangeCaption}/>\n                        <Form.Text className=\"text-muted\">\n                            Ex. I feel happy.\n                        </Form.Text>\n                    </Form.Group>\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Enter Category</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.category} onChange={this.onChangeCategory}/>\n                        <Form.Text className=\"text-muted\">\n                            Ex. Animals\n                        </Form.Text>\n                    </Form.Group>\n                    <Button variant=\"info\" block onClick={this.onSubmit}>\n                        Upload\n                    </Button>\n                </Form>\n                </Card.Body>\n\n            </Card>\n            </Collapse>\n          </>\n          </div>\n        );\n\n    }\n}\n\nexport default UserContainer;\n"]},"metadata":{},"sourceType":"module"}