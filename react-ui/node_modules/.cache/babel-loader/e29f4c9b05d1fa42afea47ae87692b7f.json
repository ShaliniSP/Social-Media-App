{"ast":null,"code":"import _classCallCheck from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sanky/slacts/src/components/User-container/usercontainer.js\";\nimport React, { Component } from 'react';\nimport './usercontainer.css';\nimport './../PostContainer/post-container.css';\nimport ImageUploader from 'react-images-upload';\nimport { Dropdown } from 'react-bootstrap';\nimport postDataService from './../../dataservice/posts-service.js';\nimport { Form, Button, Card, Collapse, Alert } from 'react-bootstrap'; // import placeholderImg from './../../small_852.jpg';\n\nvar UserContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserContainer, _Component);\n\n  function UserContainer(props, context) {\n    var _this;\n\n    _classCallCheck(this, UserContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserContainer).call(this, props, context));\n    _this.state = {\n      open: true,\n      actid: '',\n      uname: 'san',\n      posts: [],\n      cats: {},\n      pictures: [],\n      image: '',\n      capton: '',\n      category: '',\n      isLoading: false,\n      alertText: '',\n      alertType: 'success',\n      alertShow: false\n    };\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeCaption = _this.onChangeCaption.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeCategory = _this.onChangeCategory.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toDataURL = _this.toDataURL.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserContainer, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      if (this.props.user) {\n        this.setState({\n          uname: this.props.user.username\n        });\n      }\n\n      postDataService.getAllCats(function (cats) {\n        console.log(cats);\n        return _this2.setState({\n          cats: cats\n        });\n      });\n    }\n  }, {\n    key: \"onDrop\",\n    value: function onDrop(picture) {\n      var _this3 = this;\n\n      this.setState({\n        pictures: this.state.pictures.concat(picture)\n      });\n      this.toDataURL(picture[0], function (result) {\n        return _this3.setState({\n          image: result\n        });\n      });\n    }\n  }, {\n    key: \"toDataURL\",\n    value: function toDataURL(url, callback) {\n      var fileToLoad = url;\n      var fileReader = new FileReader();\n\n      fileReader.onload = function (fileLoadedEvent) {\n        callback(fileLoadedEvent.target.result);\n      };\n\n      fileReader.readAsDataURL(fileToLoad);\n    }\n  }, {\n    key: \"onChangeCaption\",\n    value: function onChangeCaption(event) {\n      return this.setState({\n        caption: event.currentTarget.value\n      });\n    }\n  }, {\n    key: \"onChangeCategory\",\n    value: function onChangeCategory(event) {\n      return this.setState({\n        category: event.currentTarget.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      this.setState({\n        isLoading: true\n      });\n      this.setState({\n        open: !this.state.open\n      });\n      var payload = {\n        actId: Math.floor(Math.random() * 100000 % 10000),\n        username: this.state.uname,\n        timestamp: '22-78-7876:39:17:75',\n        caption: this.state.caption,\n        categoryName: this.state.category,\n        imgB64: this.state.image\n      };\n      postDataService.uploadPost(payload, function (resp) {\n        console.log(resp);\n      }); //alert(\"uploaded\");\n\n      this.setState({\n        alertText: 'Successfully uploaded',\n        alertShow: true,\n        alertType: 'success',\n        isLoading: false\n      });\n      this.setState({\n        open: true,\n        actid: '',\n        uname: '',\n        posts: [],\n        pictures: [],\n        image: '',\n        capton: '',\n        category: ''\n      });\n    }\n  }, {\n    key: \"allCats\",\n    value: function allCats() {\n      return Object.keys(this.state.cats).map(function (cat) {\n        return React.createElement(\"p\", {\n          key: \"categ-\".concat(cat),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 133\n          },\n          __self: this\n        }, cat);\n      }); // return console.log(Object.keys(this.state.cats));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var isLoading = this.state.isLoading;\n      return React.createElement(\"div\", {\n        className: \"UserContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Collapse, {\n        in: this.state.open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Post\"), React.createElement(Alert, {\n        key: '1fdf',\n        show: this.state.alertShow,\n        variant: this.state.alertType,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, this.state.alertText), this.state.pictures.length !== 0 ? React.createElement(Card.Img, {\n        src: this.state.image,\n        className: \"uploaded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }, React.createElement(ImageUploader, {\n        className: \"upload-img\",\n        withIcon: true,\n        buttonText: \"Upload Image\",\n        onChange: this.onDrop,\n        imgExtension: ['.jpg', '.gif', '.png'],\n        maxFileSize: 5242880,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      })), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Caption\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.password,\n        onChange: this.onChangeCaption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 189\n        },\n        __self: this\n      }, \"Ex. I feel happy.\")), React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, \"Select Category\"), React.createElement(Dropdown, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(Dropdown.Toggle, {\n        variant: \"info\",\n        id: \"dropdown-basic\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, this.state.category.length === 0 ? \"Categories\" : this.state.category), React.createElement(Dropdown.Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205\n        },\n        __self: this\n      }, Object.keys(this.state.cats).map(function (cat) {\n        return React.createElement(Dropdown.Item, {\n          key: \"categ\".concat(cat),\n          onClick: function onClick() {\n            return _this4.setState({\n              category: cat\n            });\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }, cat);\n      })))), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        disabled: isLoading,\n        onClick: !isLoading ? this.onSubmit : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, isLoading ? 'Uploading…' : 'Upload Act')))))));\n    }\n  }]);\n\n  return UserContainer;\n}(Component);\n\nexport default UserContainer;","map":{"version":3,"sources":["/Users/sanky/slacts/src/components/User-container/usercontainer.js"],"names":["React","Component","ImageUploader","Dropdown","postDataService","Form","Button","Card","Collapse","Alert","UserContainer","props","context","state","open","actid","uname","posts","cats","pictures","image","capton","category","isLoading","alertText","alertType","alertShow","onDrop","bind","onChangeCaption","onChangeCategory","onSubmit","toDataURL","user","setState","username","getAllCats","console","log","picture","concat","result","url","callback","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","target","readAsDataURL","event","caption","currentTarget","value","payload","actId","Math","floor","random","timestamp","categoryName","imgB64","uploadPost","resp","Object","keys","map","cat","length","password"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,OAAO,qBAAP;AACA,OAAO,uCAAP;AAEA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,SAASC,QAAT,QAA0B,iBAA1B;AAEA,OAAOC,eAAP,MAA4B,sCAA5B;AAEA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,IAHJ,EAIIC,QAJJ,EAKIC,KALJ,QAMO,iBANP,C,CAOA;;IAEMC,a;;;;;AACF,yBAAYC,KAAZ,EAAmBC,OAAnB,EAA4B;AAAA;;AAAA;;AACxB,uFAAMD,KAAN,EAAaC,OAAb;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,IADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,KAAK,EAAE,KAHE;AAITC,MAAAA,KAAK,EAAE,EAJE;AAKTC,MAAAA,IAAI,EAAE,EALG;AAMTC,MAAAA,QAAQ,EAAE,EAND;AAOTC,MAAAA,KAAK,EAAE,EAPE;AAQTC,MAAAA,MAAM,EAAE,EARC;AASTC,MAAAA,QAAQ,EAAE,EATD;AAUTC,MAAAA,SAAS,EAAE,KAVF;AAWTC,MAAAA,SAAS,EAAE,EAXF;AAYTC,MAAAA,SAAS,EAAE,SAZF;AAaTC,MAAAA,SAAS,EAAE;AAbF,KAAb;AAeA,UAAKC,MAAL,GAAc,MAAKA,MAAL,CAAYC,IAAZ,uDAAd;AACA,UAAKC,eAAL,GAAuB,MAAKA,eAAL,CAAqBD,IAArB,uDAAvB;AACA,UAAKE,gBAAL,GAAwB,MAAKA,gBAAL,CAAsBF,IAAtB,uDAAxB;AACA,UAAKG,QAAL,GAAgB,MAAKA,QAAL,CAAcH,IAAd,uDAAhB;AACA,UAAKI,SAAL,GAAiB,MAAKA,SAAL,CAAeJ,IAAf,uDAAjB;AAtBwB;AAuB3B;;;;wCAEmB;AAAA;;AAChB,UAAI,KAAKjB,KAAL,CAAWsB,IAAf,EAAqB;AACjB,aAAKC,QAAL,CAAc;AACVlB,UAAAA,KAAK,EAAE,KAAKL,KAAL,CAAWsB,IAAX,CAAgBE;AADb,SAAd;AAGH;;AAED/B,MAAAA,eAAe,CAACgC,UAAhB,CAA2B,UAAAlB,IAAI,EAAI;AAC/BmB,QAAAA,OAAO,CAACC,GAAR,CAAYpB,IAAZ;AAEA,eAAO,MAAI,CAACgB,QAAL,CAAc;AACjBhB,UAAAA,IAAI,EAAJA;AADiB,SAAd,CAAP;AAGH,OAND;AAOH;;;2BAEMqB,O,EAAS;AAAA;;AACZ,WAAKL,QAAL,CAAc;AACVf,QAAAA,QAAQ,EAAE,KAAKN,KAAL,CAAWM,QAAX,CAAoBqB,MAApB,CAA2BD,OAA3B;AADA,OAAd;AAIA,WAAKP,SAAL,CAAeO,OAAO,CAAC,CAAD,CAAtB,EAA2B,UAAAE,MAAM,EAAI;AACjC,eAAO,MAAI,CAACP,QAAL,CAAc;AACjBd,UAAAA,KAAK,EAAEqB;AADU,SAAd,CAAP;AAGH,OAJD;AAKH;;;8BAESC,G,EAAKC,Q,EAAU;AACrB,UAAIC,UAAU,GAAGF,GAAjB;AACA,UAAIG,UAAU,GAAG,IAAIC,UAAJ,EAAjB;;AACAD,MAAAA,UAAU,CAACE,MAAX,GAAoB,UAAUC,eAAV,EAA2B;AAC3CL,QAAAA,QAAQ,CAACK,eAAe,CAACC,MAAhB,CAAuBR,MAAxB,CAAR;AACH,OAFD;;AAGAI,MAAAA,UAAU,CAACK,aAAX,CAAyBN,UAAzB;AACH;;;oCAEeO,K,EAAO;AAEnB,aAAO,KAAKjB,QAAL,CAAc;AACjBkB,QAAAA,OAAO,EAAED,KAAK,CAACE,aAAN,CAAoBC;AADZ,OAAd,CAAP;AAGH;;;qCAEgBH,K,EAAO;AAGpB,aAAO,KAAKjB,QAAL,CAAc;AACjBZ,QAAAA,QAAQ,EAAE6B,KAAK,CAACE,aAAN,CAAoBC;AADb,OAAd,CAAP;AAGH;;;+BAEU;AACT,WAAKpB,QAAL,CAAc;AAAEX,QAAAA,SAAS,EAAE;AAAb,OAAd;AACE,WAAKW,QAAL,CAAc;AAAEpB,QAAAA,IAAI,EAAE,CAAC,KAAKD,KAAL,CAAWC;AAApB,OAAd;AACA,UAAMyC,OAAO,GAAG;AACZC,QAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,MAAhB,GAAyB,KAApC,CADK;AAEZxB,QAAAA,QAAQ,EAAE,KAAKtB,KAAL,CAAWG,KAFT;AAGZ4C,QAAAA,SAAS,EAAE,qBAHC;AAIZR,QAAAA,OAAO,EAAE,KAAKvC,KAAL,CAAWuC,OAJR;AAKZS,QAAAA,YAAY,EAAE,KAAKhD,KAAL,CAAWS,QALb;AAMZwC,QAAAA,MAAM,EAAE,KAAKjD,KAAL,CAAWO;AANP,OAAhB;AASAhB,MAAAA,eAAe,CAAC2D,UAAhB,CAA2BR,OAA3B,EAAoC,UAACS,IAAD,EAAU;AAC1C3B,QAAAA,OAAO,CAACC,GAAR,CAAY0B,IAAZ;AACH,OAFD,EAZO,CAeP;;AACA,WAAK9B,QAAL,CAAc;AACZV,QAAAA,SAAS,EAAG,uBADA;AAEZE,QAAAA,SAAS,EAAE,IAFC;AAGZD,QAAAA,SAAS,EAAE,SAHC;AAIZF,QAAAA,SAAS,EAAE;AAJC,OAAd;AAMA,WAAKW,QAAL,CAAc;AACVpB,QAAAA,IAAI,EAAE,IADI;AAEVC,QAAAA,KAAK,EAAE,EAFG;AAGVC,QAAAA,KAAK,EAAE,EAHG;AAIVC,QAAAA,KAAK,EAAE,EAJG;AAKVE,QAAAA,QAAQ,EAAE,EALA;AAMVC,QAAAA,KAAK,EAAE,EANG;AAOVC,QAAAA,MAAM,EAAE,EAPE;AAQVC,QAAAA,QAAQ,EAAE;AARA,OAAd;AAWH;;;8BACS;AACN,aAAO2C,MAAM,CAACC,IAAP,CAAY,KAAKrD,KAAL,CAAWK,IAAvB,EAA6BiD,GAA7B,CAAkC,UAAAC,GAAG;AAAA,eAAI;AAAG,UAAA,GAAG,kBAAWA,GAAX,CAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAyBA,GAAzB,CAAJ;AAAA,OAArC,CAAP,CADM,CAEN;AACH;;;6BAEQ;AAAA;;AAAA,UACG7C,SADH,GACiB,KAAKV,KADtB,CACGU,SADH;AAEL,aAGI;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAaI,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAE,KAAKV,KAAL,CAAWC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,EAEI,oBAAC,KAAD;AAAO,QAAA,GAAG,EAAE,MAAZ;AAAoB,QAAA,IAAI,EAAE,KAAKD,KAAL,CAAWa,SAArC;AAAgD,QAAA,OAAO,EAAE,KAAKb,KAAL,CAAWY,SAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWW,SADd,CAFJ,EAKK,KAAKX,KAAL,CAAWM,QAAX,CAAoBkD,MAApB,KAA+B,CAA/B,GACG,oBAAC,IAAD,CAAM,GAAN;AAAU,QAAA,GAAG,EAAE,KAAKxD,KAAL,CAAWO,KAA1B;AAAiC,QAAA,SAAS,EAAC,UAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADH,GAGG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI,oBAAC,aAAD;AACI,QAAA,SAAS,EAAC,YADd;AAEI,QAAA,QAAQ,EAAE,IAFd;AAGI,QAAA,UAAU,EAAC,cAHf;AAII,QAAA,QAAQ,EAAE,KAAKO,MAJnB;AAKI,QAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,CALlB;AAMI,QAAA,WAAW,EAAE,OANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CARR,EAsBI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAOI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,EAEI,oBAAC,IAAD,CAAM,OAAN;AAAc,QAAA,IAAI,EAAC,MAAnB;AAA0B,QAAA,KAAK,EAAE,KAAKd,KAAL,CAAWyD,QAA5C;AAAsD,QAAA,QAAQ,EAAE,KAAKzC,eAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGI,oBAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAHJ,CAPJ,EAeI,oBAAC,IAAD,CAAM,KAAN;AAAY,QAAA,SAAS,EAAC,mBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ,EAMI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,QAAD,CAAU,MAAV;AAAiB,QAAA,OAAO,EAAC,MAAzB;AAAgC,QAAA,EAAE,EAAC,gBAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKhB,KAAL,CAAWS,QAAX,CAAoB+C,MAApB,KAA6B,CAA7B,GAA+B,YAA/B,GAA4C,KAAKxD,KAAL,CAAWS,QAD5D,CADJ,EAKI,oBAAC,QAAD,CAAU,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ2C,MAAM,CAACC,IAAP,CAAY,KAAKrD,KAAL,CAAWK,IAAvB,EACKiD,GADL,CACS,UAAAC,GAAG;AAAA,eAAI,oBAAC,QAAD,CAAU,IAAV;AAAe,UAAA,GAAG,iBAAUA,GAAV,CAAlB;AAAmC,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAAClC,QAAL,CAAc;AACxEZ,cAAAA,QAAQ,EAAE8C;AAD8D,aAAd,CAAN;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEPA,GAFO,CAAJ;AAAA,OADZ,CAFR,CALJ,CANJ,CAfJ,EAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,MAAD;AACA,QAAA,OAAO,EAAC,MADR;AAEA,QAAA,QAAQ,EAAE7C,SAFV;AAGA,QAAA,OAAO,EAAE,CAACA,SAAD,GAAa,KAAKQ,QAAlB,GAA6B,IAHtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKCR,SAAS,GAAG,YAAH,GAAkB,YAL5B,CADA,CApCJ,CADJ,CAtBJ,CADJ,CAbJ,CAHJ;AAgGH;;;;EAvNuBtB,S;;AA0N5B,eAAeS,aAAf","sourcesContent":["import React, { Component } from 'react';\n\nimport './usercontainer.css';\nimport './../PostContainer/post-container.css';\n\nimport ImageUploader from 'react-images-upload';\nimport { Dropdown, } from 'react-bootstrap';\n\nimport postDataService from './../../dataservice/posts-service.js';\n\nimport {\n    Form,\n    Button,\n    Card,\n    Collapse,\n    Alert,\n} from 'react-bootstrap';\n// import placeholderImg from './../../small_852.jpg';\n\nclass UserContainer extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            open: true,\n            actid: '',\n            uname: 'san',\n            posts: [],\n            cats: {},\n            pictures: [],\n            image: '',\n            capton: '',\n            category: '',\n            isLoading: false,\n            alertText: '',\n            alertType: 'success',\n            alertShow: false,\n        };\n        this.onDrop = this.onDrop.bind(this);\n        this.onChangeCaption = this.onChangeCaption.bind(this);\n        this.onChangeCategory = this.onChangeCategory.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.toDataURL = this.toDataURL.bind(this);\n    }\n\n    componentDidMount() {\n        if (this.props.user) {\n            this.setState({\n                uname: this.props.user.username,\n            });\n        }\n\n        postDataService.getAllCats(cats => {\n            console.log(cats);\n\n            return this.setState({\n                cats,\n            });\n        });\n    }\n\n    onDrop(picture) {\n        this.setState({\n            pictures: this.state.pictures.concat(picture),\n        });\n\n        this.toDataURL(picture[0], result => {\n            return this.setState({\n                image: result,\n            });\n        });\n    }\n\n    toDataURL(url, callback) {\n        var fileToLoad = url;\n        var fileReader = new FileReader();\n        fileReader.onload = function (fileLoadedEvent) {\n            callback(fileLoadedEvent.target.result);\n        };\n        fileReader.readAsDataURL(fileToLoad);\n    }\n\n    onChangeCaption(event) {\n\n        return this.setState({\n            caption: event.currentTarget.value,\n        });\n    }\n\n    onChangeCategory(event) {\n\n\n        return this.setState({\n            category: event.currentTarget.value,\n        });\n    }\n\n    onSubmit() {\n      this.setState({ isLoading: true });\n        this.setState({ open: !this.state.open })\n        const payload = {\n            actId: Math.floor(Math.random() * 100000 % 10000),\n            username: this.state.uname,\n            timestamp: '22-78-7876:39:17:75',\n            caption: this.state.caption,\n            categoryName: this.state.category,\n            imgB64: this.state.image,\n        };\n\n        postDataService.uploadPost(payload, (resp) => {\n            console.log(resp);\n        })\n        //alert(\"uploaded\");\n        this.setState({\n          alertText : 'Successfully uploaded',\n          alertShow: true,\n          alertType: 'success',\n          isLoading: false,\n        });\n        this.setState({\n            open: true,\n            actid: '',\n            uname: '',\n            posts: [],\n            pictures: [],\n            image: '',\n            capton: '',\n            category: '',\n        })\n\n    }\n    allCats() {\n        return Object.keys(this.state.cats).map((cat => <p key={`categ-${cat}`}>{cat}</p>));\n        // return console.log(Object.keys(this.state.cats));\n    }\n\n    render() {\n        const { isLoading } = this.state;\n        return (\n\n\n            <div className=\"UserContainer\">\n\n                {/* <Button\n              className=\"first\"\n              variant=\"info\"\n              onClick={() => this.setState({ open: !open })}\n              aria-controls=\"example-collapse-text\"\n              aria-expanded={open}\n              block\n            >\n              +\n            </Button> */}\n\n                <Collapse in={this.state.open}>\n                    <Card>\n                        <Card.Header>Post</Card.Header>\n                        <Alert key={'1fdf'} show={this.state.alertShow} variant={this.state.alertType}>\n                          {this.state.alertText}\n                        </Alert>\n                        {this.state.pictures.length !== 0 ?\n                            <Card.Img src={this.state.image} className=\"uploaded\"></Card.Img>\n                            :\n                            <div>\n\n                                <ImageUploader\n                                    className=\"upload-img\"\n                                    withIcon={true}\n                                    buttonText='Upload Image'\n                                    onChange={this.onDrop}\n                                    imgExtension={['.jpg', '.gif', '.png']}\n                                    maxFileSize={5242880}\n                                />\n                            </div>\n\n                        }\n\n                        <Card.Body>\n                            <Form className='form'>\n                                <Form.Group controlId=\"formBasicEmail\">\n\n\n\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Caption</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.password} onChange={this.onChangeCaption} />\n                                    <Form.Text className=\"text-muted\">\n                                        Ex. I feel happy.\n                        </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Select Category</Form.Label>\n                                    {/* <Form.Control type=\"text\" value={this.state.category} onChange={this.onChangeCategory} />\n                                    <Form.Text className=\"text-muted\">\n                                        Ex. Animals\n                                    </Form.Text> */}\n                                    <Dropdown>\n                                        <Dropdown.Toggle variant=\"info\" id=\"dropdown-basic\">\n                                            {this.state.category.length===0?\"Categories\":this.state.category}\n                        </Dropdown.Toggle>\n\n                                        <Dropdown.Menu>\n                                            {\n                                                Object.keys(this.state.cats)\n                                                    .map(cat => <Dropdown.Item key={`categ${cat}`} onClick={() => this.setState({\n                                                        category: cat,\n                                                    })}>{cat}</Dropdown.Item>)\n                                            }\n                                        </Dropdown.Menu>\n                                    </Dropdown>\n                                </Form.Group>\n                                <center>\n                                <Button\n                                variant=\"info\"\n                                disabled={isLoading}\n                                onClick={!isLoading ? this.onSubmit : null}\n                                >\n                                {isLoading ? 'Uploading…' : 'Upload Act'}\n                                </Button>\n\n                                </center>\n\n                            </Form>\n                        </Card.Body>\n\n                    </Card>\n                </Collapse>\n\n            </div>\n        );\n\n    }\n}\n\nexport default UserContainer;\n"]},"metadata":{},"sourceType":"module"}