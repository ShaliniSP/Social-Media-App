{"ast":null,"code":"import _classCallCheck from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/sanky/slacts/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/sanky/slacts/src/components/User-container/usercontainer.js\";\nimport React, { Component } from 'react';\nimport './usercontainer.css';\nimport ImageUploader from 'react-images-upload';\nimport postDataService from './../../dataservice/posts-service.js';\nimport { Form, Button, Card, Collapse } from 'react-bootstrap'; // import placeholderImg from './../../small_852.jpg';\n\nvar UserContainer =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UserContainer, _Component);\n\n  function UserContainer(props, context) {\n    var _this;\n\n    _classCallCheck(this, UserContainer);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UserContainer).call(this, props, context));\n    _this.state = {\n      open: true,\n      actid: '',\n      uname: 'san',\n      posts: [],\n      pictures: [],\n      image: '',\n      capton: '',\n      category: ''\n    };\n    _this.onDrop = _this.onDrop.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeCaption = _this.onChangeCaption.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onChangeCategory = _this.onChangeCategory.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toDataURL = _this.toDataURL.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(UserContainer, [{\n    key: \"onDrop\",\n    value: function onDrop(picture) {\n      var _this2 = this;\n\n      this.setState({\n        pictures: this.state.pictures.concat(picture)\n      });\n      this.toDataURL(picture[0], function (result) {\n        return _this2.setState({\n          image: result\n        });\n      });\n    }\n  }, {\n    key: \"toDataURL\",\n    value: function toDataURL(url, callback) {\n      var fileToLoad = url;\n      var fileReader = new FileReader();\n\n      fileReader.onload = function (fileLoadedEvent) {\n        callback(fileLoadedEvent.target.result);\n      };\n\n      fileReader.readAsDataURL(fileToLoad);\n    }\n  }, {\n    key: \"onChangeCaption\",\n    value: function onChangeCaption(event) {\n      return this.setState({\n        caption: event.currentTarget.value\n      });\n    }\n  }, {\n    key: \"onChangeCategory\",\n    value: function onChangeCategory(event) {\n      return this.setState({\n        category: event.currentTarget.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      this.setState({\n        open: !this.state.open\n      });\n      var payload = {\n        actId: Math.floor(Math.random() * 100000 % 10000),\n        username: this.state.uname,\n        timestamp: '22-78-7876:39:17:75',\n        caption: this.state.caption,\n        categoryName: this.state.category,\n        imgB64: this.state.image\n      };\n      postDataService.uploadPost(payload, function (resp) {\n        console.log(resp);\n      });\n      alert(\"uploaded\");\n      this.setState({\n        open: false,\n        actid: '',\n        uname: '',\n        posts: [],\n        pictures: [],\n        image: '',\n        capton: '',\n        category: ''\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //const { open } = this.state;\n      return React.createElement(\"div\", {\n        className: \"UserContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(Collapse, {\n        in: this.state.open,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Card.Header, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, \"Post\"), this.state.pictures.length !== 0 ? React.createElement(Card.Img, {\n        src: this.state.image,\n        className: \"uploaded\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }) : React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(ImageUploader, {\n        className: \"upload-img\",\n        withIcon: true,\n        buttonText: \"Choose image\",\n        onChange: this.onDrop,\n        imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n        maxFileSize: 5242880,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      })), React.createElement(Card.Body, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Form.Group, {\n        controlId: \"formBasicEmail\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }), React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, \"Caption\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.password,\n        onChange: this.onChangeCaption,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, \"Ex. I feel happy.\")), React.createElement(Form.Group, {\n        controlId: \"formBasicPassword\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Form.Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Enter Category\"), React.createElement(Form.Control, {\n        type: \"text\",\n        value: this.state.category,\n        onChange: this.onChangeCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(Form.Text, {\n        className: \"text-muted\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Ex. Animals\")), React.createElement(\"center\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Button, {\n        variant: \"info\",\n        block: true,\n        onClick: this.onSubmit,\n        className: \"lastupload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, \"Upload Act\")))))));\n    }\n  }]);\n\n  return UserContainer;\n}(Component);\n\nexport default UserContainer;","map":{"version":3,"sources":["/Users/sanky/slacts/src/components/User-container/usercontainer.js"],"names":["React","Component","ImageUploader","postDataService","Form","Button","Card","Collapse","UserContainer","props","context","state","open","actid","uname","posts","pictures","image","capton","category","onDrop","bind","onChangeCaption","onChangeCategory","onSubmit","toDataURL","picture","setState","concat","result","url","callback","fileToLoad","fileReader","FileReader","onload","fileLoadedEvent","target","readAsDataURL","event","caption","currentTarget","value","payload","actId","Math","floor","random","username","timestamp","categoryName","imgB64","uploadPost","resp","console","log","alert","length","password"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nimport './usercontainer.css';\nimport ImageUploader from 'react-images-upload';\nimport postDataService from './../../dataservice/posts-service.js';\n\nimport {\n    Form,\n    Button,\n    Card,\n    Collapse,\n} from 'react-bootstrap';\n// import placeholderImg from './../../small_852.jpg';\n\nclass UserContainer extends Component {\n    constructor(props, context) {\n        super(props, context);\n\n        this.state = {\n            open: true,\n            actid: '',\n            uname: 'san',\n            posts: [],\n            pictures: [],\n            image: '',\n            capton: '',\n            category: '',\n        };\n        this.onDrop = this.onDrop.bind(this);\n        this.onChangeCaption = this.onChangeCaption.bind(this);\n        this.onChangeCategory = this.onChangeCategory.bind(this);\n        this.onSubmit = this.onSubmit.bind(this);\n        this.toDataURL = this.toDataURL.bind(this);\n    }\n\n    onDrop(picture) {\n        this.setState({\n            pictures: this.state.pictures.concat(picture),\n        });\n\n        this.toDataURL(picture[0], result => {\n            return this.setState({\n                image: result,\n            });\n        });\n    }\n\n    toDataURL(url, callback) {\n        var fileToLoad = url;\n        var fileReader = new FileReader();\n        fileReader.onload = function (fileLoadedEvent) {\n            callback(fileLoadedEvent.target.result);\n        };\n        fileReader.readAsDataURL(fileToLoad);\n    }\n\n    onChangeCaption(event) {\n\n        return this.setState({\n            caption: event.currentTarget.value,\n        });\n    }\n\n    onChangeCategory(event) {\n\n\n        return this.setState({\n            category: event.currentTarget.value,\n        });\n    }\n\n    onSubmit() {\n        this.setState({ open: !this.state.open })\n        const payload = {\n            actId: Math.floor(Math.random() * 100000 % 10000),\n            username: this.state.uname,\n            timestamp: '22-78-7876:39:17:75',\n            caption: this.state.caption,\n            categoryName: this.state.category,\n            imgB64: this.state.image,\n        };\n\n        postDataService.uploadPost(payload, (resp) => {\n            console.log(resp);\n        })\n        alert(\"uploaded\");\n        this.setState({\n            open: false,\n            actid: '',\n            uname: '',\n            posts: [],\n            pictures: [],\n            image: '',\n            capton: '',\n            category: '',\n        })\n\n    }\n\n    render() {\n        //const { open } = this.state;\n        return (\n\n\n            <div className=\"UserContainer\">\n\n                {/* <Button\n              className=\"first\"\n              variant=\"info\"\n              onClick={() => this.setState({ open: !open })}\n              aria-controls=\"example-collapse-text\"\n              aria-expanded={open}\n              block\n            >\n              +\n            </Button> */}\n\n                <Collapse in={this.state.open}>\n                    <Card>\n                        <Card.Header>Post</Card.Header>\n                        {this.state.pictures.length !== 0 ?\n                            <Card.Img src={this.state.image} className=\"uploaded\"></Card.Img>\n                            :\n                            <div>\n\n                                <ImageUploader\n                                    className=\"upload-img\"\n                                    withIcon={true}\n                                    buttonText='Choose image'\n                                    onChange={this.onDrop}\n                                    imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                                    maxFileSize={5242880}\n                                />\n                            </div>\n\n                        }\n\n                        <Card.Body>\n                            <Form className='form'>\n                                <Form.Group controlId=\"formBasicEmail\">\n\n\n\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Caption</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.password} onChange={this.onChangeCaption} />\n                                    <Form.Text className=\"text-muted\">\n                                        Ex. I feel happy.\n                        </Form.Text>\n                                </Form.Group>\n\n                                <Form.Group controlId=\"formBasicPassword\">\n                                    <Form.Label>Enter Category</Form.Label>\n                                    <Form.Control type=\"text\" value={this.state.category} onChange={this.onChangeCategory} />\n                                    <Form.Text className=\"text-muted\">\n                                        Ex. Animals\n                                    </Form.Text>\n                                </Form.Group>\n                                <center>\n                                    <Button variant=\"info\" block onClick={this.onSubmit} className=\"lastupload\">\n                                        Upload Act\n                                    </Button>\n                                </center>\n\n                            </Form>\n                        </Card.Body>\n\n                    </Card>\n                </Collapse>\n\n            </div>\n        );\n\n    }\n}\n\nexport default UserContainer;\n"]},"metadata":{},"sourceType":"module"}